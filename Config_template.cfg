#Configuration template
#27/01/2023
#Author: Fábio Morgado

#######################
#General Options block
######################

[Options]

#Maximum number of iterations
Num_iters = 1

#Load the last simulation state
Load_state = False

#Select the level of the aerothermodynamics in the simulation (Low/High/Multi)
Fidelity = Low

#Folder where the simulation solution is stored
Output_folder = /home/simulation

#Load the mesh information if pre-processed beforehand in a previous run (The Output folder needs to be the same)
Load_mesh = False

#Load the state of the simulation from a previous run (The Output folder needs to be the same)
Load_state = False

#######################
#Trajectory block
######################

[Trajectory]

#To be implemented
#Choosing Frame for dynamics (Inertial/Rotating)
#The user needs to provide the below values with respect to the chosen frame:
Frame = Inertial

#Initial altitude [meters]
Altitude = 100000

#Initial Velocity [meters/second]
Velocity = 5000

#Initial FLight Path Angle [degree]
Flight_path_angle = 0

#Initial Heading Angle [degree]
Heading_angle = 0

#Initial Latitude [degree]
Latitude = 0

#Initial Longitude [degree]
Longitude = 0



#######################
#Model block
######################

[Model]

#Name of the planet to run the simulation (Earth, Neptune, Jupiter)
Planet = neptune

#Flag if the user wants to use a pre-defined vehicle
Vehicle = False

#Flag if the user wants to run a drag model instead of Modidied Newtonian
Drag_model = False



#################################################
#Vehicle block (If Vehicle flag is set to true)
#################################################

[Vehicle]

# Mass of the vehicle (kg)
Mass = 100

# Nose radius of the vehicle for stagnation heatflux computation(m)
Nose_radius = 1

# Area of reference for drag model (if Drag_model = True)
Area_reference = 1

# Name of the Drag model containing the Mach vs drag coefficient information in TITAN/Model/Drag
Drag_file = Galileo_CD.csv




#######################
#Freestream block
######################

[Freestream]

# Method used for the computation of the freesteam Properties (Standard, Mutationpp, GRAM)
method = Standard

# Model used to retrieve the atmospheric data (Earth - NRLMSISE00,GRAM ; Neptune - GRAM; Uranus - GRAM)
model = NRLMSISE00




#####################
# GRAM block - Optional
#####################
# Block to define the GRAM model parameters

[GRAM]

# MinMaxFactor for the NeptuneGRAM (see NeptuneGRAM manual)
MinMaxFactor= 0.0

# Automatic computation of the MinMaxFactor for the NeptuneGRAM (see NeptuneGRAM manual. 0 = False, 1 = True)
ComputeMinMaxFactor = 0

# Path for the SPICE database
SPICE_Path = /xx/xx/xx/SPICE

# Path for GRAM software (required for Earth GRAM)
GRAM_Path = /xx/xx/xx/GRAM

# Year (e.g., 2025)
Year = 2000

# Month (1–12)
Month = 1

# Day of the month (1–31)
Day = 1

# Hour in UTC (0–23)
Hour = 0

# Minute (0–59)
Minute = 0 

# Seconds (can be fractional, e.g., 30.5)
Seconds = 0.0

#####################
#Time block
#####################

[Time]

# Value of Time-step [s]
Time_step = 0.25

# Name of propagator used for dynamics integration (EULER, 2ND_ORDER)
Propagator = EULER

##########################################
#SU2 block - For high-fidelity simulations
##########################################

[SU2]

# Solver to run (EULER/NAVIER_STOKES or NEMO_EULER/NEMO_NAVIER_STOKES)
Solver = NAVIER_STOKES

# Maximum number of iterations
Num_iters = 100

# Convective scheme
Conv_method = AUSM

# Maximum number of iterations 
Adapt_iter = 2

# Number of cores to run CFD simulation
Num_cores = 1

# Flag for MUSCL reconstruction (Yes/No)
Muscl = YES

# CFL number
Cfl = 0.5



#########################
#Bloom block - Optional
#########################
#Tool to generate a boundary layer in the CFD mesh

[Bloom]

#Flag to activate Bloom
Flag = False

#Number of layers in the boundary layer
Layers = 11

#Spacing of the initial layer
Spacing = 1E-4

#Growth rate between the layers
Growth_Rate = 1.1



#########################
#AMG block - Optional
#########################
#Tool to perform anisotropic mesh adaptation for CFD

[AMG]

#Flag to activate AMG
Flag = True

#Norm of the error estimate for the Hessian computation
P = 4

#Correction for metric complexity
C = 10000

#Field used for the mesh adaptation
Sensor = Mach


##########################################
#SPARTA block - For high-fidelity simulations
##########################################

[SPARTA]

# Operational mode of SPARTA (either manual or automatic, default = automatic) 
# Setting to manual allows the user to perform the SPARTA simulation offline and provide the solution file
# back to TITAN to proceed with the re-entry simulation, automatic allows TITAN to perform the SPARTA simulation 
Mode = automatic

# Number of cores to run DSMC simulation
Num_cores = 1

# Number of simulated particles per cell (PPC) in DSMC simulation
PPC = 15

# Accommodation coefficient used in gas-surface interactions. (uniform value across all assembly objects currently)
# Value of 1 means full energy/momentum accommodation
ACC = 1

# Total number of timesteps used for grid adaptation
# This phase runs before the main simulation and refines the grid based on flow properties
Adapt_iters = 100

# Number of timesteps to run the simulation after grid adaptation to allow the flow to settle
Unsteady_iters = 100

# Number of timesteps to run the simulation during the sampling phase
# During this phase, surface and flow field quantities are averaged and saved
Sample_iters = 100

# Frequency of logging statistics to the output log
Stats_freq = 10

# DSMC time-averaged data sampling settings:
# Number of timesteps between each sampling of simulation data
# (e.g., Nevery = 1 take a sample every timestep; Nevery = 5 sample every 5 timesteps)
Nevery = 1

# Total Number of samples to collect during the averaging period
# (e.g. Nrepeat = 10 collects 10 samples total, each spaced Nevery timesteps apart)
Nrepeat = 10

# Total number of timesteps used for averaging (Ntotal = Nevery × Nrepeat defines the full averaging window duration)
# If Ntotal is larger, the averaging will continue using a rolling window of size Nrepeat × Nevery
Ntotal = 10

# Number of timesteps to run during each adaptive refinement step. Used only for grid adaptation
Nadapt = 10

# Boolean flag to write restart files during the SPARTA simulation 
# (writes at three intervals: before sampling, mid-sampling, and after sampling)
Write_Restart = False

# Boolean flag to enable writing and post-processing of grid/volume results from SPARTA
Grid_Results = False

# Full path to the Anaconda environment containing Paraview (used for SPARTA post-processing)
Conda_Env_Path = /xxx/xxxx/anaconda3/envs/xxxx

#######################
#Assembly block
#######################

[Assembly]

# Path for the geometry files
Path = /home/fmpmorgado/software/TITAN_cleanup/Test/Mesh/2_cubes/

#Linkage information for the specified components in the Objects section
#
#In this example, it means that component "1" and component "2" are connected through component "3"
#
#An additional option is to link component "1" and "2" without other component, by setting the last entry to "0"
Connectivity = [[1,2,3]]

#Angle of attack of the assembly
Angle_of_attack = 0.0

#Angle of sideslip of the assembly
Sideslip = 0.0


#######################
#Objects block
######################

[Objects]
#Primitive used in the Assembly -> name_Marker = (NAME, TYPE, MATERIAL)
#Joints used in the Assembly    -> name_Marker = (NAME, TYPE, MATERIAL, TRIGGER_TYPE, TRIGGER_VALUE)
#
#NAME -> Name of the geometry file in stl format
#TYPE -> Type of the object (Primitive/Joint)
#MATERIAL -> Material of the object, needs to one specified in the material database
#TRIGGER_TYPE  -> The criteria for the joint fragmentation (Altitude, time, iteration, Temperature)
#TRIGGER_VALUE -> The value to trigger the fragmentation
#
#If no trigger is specified, the joint does not undergo fragmentation

Cube_A = [NAME = Cube_A.stl,         TYPE = Primitive,   MATERIAL = Unittest,   FENICS_ID = 1]]
Cube_B = [NAME = Cube_B.stl,         TYPE = Primitive,   MATERIAL = Unittest,   FENICS_ID = 1]]
Joint  = [NAME = Joint.stl,          TYPE = Joint,       MATERIAL = Unittest,   FENICS_ID = 1]]
